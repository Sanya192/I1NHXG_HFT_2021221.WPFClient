//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//    I still have to document it because stylecop, so it might be bad documentation.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace VegyesBolt.Data
{
    /// <summary>
    /// The db context for the application.
    /// </summary>
    public partial class VegyesBoltDatabaseEntities1 : DbContext
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="VegyesBoltDatabaseEntities1"/> class.
        /// </summary>
        public VegyesBoltDatabaseEntities1()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VegyesBoltDatabaseEntities1"/> class.
        /// </summary>
        /// <param name="options">I dont know what happens here.</param>
        public VegyesBoltDatabaseEntities1(DbContextOptions<VegyesBoltDatabaseEntities1> options)
            : base(options)
        {
        }

        /// <summary>
        /// Gets or sets the megye.
        /// </summary>
        public virtual DbSet<Megyek> Megyeks { get; set; }

        /// <summary>
        /// Gets or sets the termekek.
        /// </summary>
        public virtual DbSet<Termekek> Termekeks { get; set; }

        /// <summary>
        /// Gets or sets the vasarlas.
        /// </summary>
        public virtual DbSet<Vasarlasok> Vasarlasoks { get; set; }

        /// <summary>
        /// Gets or sets the vasarlok.
        /// </summary>
        public virtual DbSet<Vasarlok> Vasarloks { get; set; }

        /// <inheritdoc/>
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=(LocalDB)\\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\\Vegyesbolt.mdf;Integrated Security=True");
                optionsBuilder.UseLazyLoadingProxies();
            }
        }

        /// <inheritdoc/>
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Megyek>(entity =>
            {
                entity.ToTable("Megyek");

                entity.Property(e => e.Nev)
                    .IsRequired()
                    .HasMaxLength(42)
                    .IsUnicode(false);

                entity.Property(e => e.Szekhely)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Termekek>(entity =>
            {
                entity.ToTable("Termekek");

                entity.Property(e => e.AfasAra).HasComputedColumnSql("([Ara]*(1.27))", true);

                entity.Property(e => e.TermekNeve)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Vasarlasok>(entity =>
            {
                entity.HasKey(e => new { e.TermekId, e.VasarloId, e.VasarlasDatuma })
                    .HasName("VASARLASOK_PK");

                entity.ToTable("Vasarlasok");

                entity.Property(e => e.VasarlasDatuma).HasColumnType("datetime");

                entity.HasOne(d => d.Termek)
                    .WithMany(p => p.Vasarlasoks)
                    .HasForeignKey(d => d.TermekId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("VASARLASOK_TERMEKEK_ID_FK");

                entity.HasOne(d => d.Vasarlo)
                    .WithMany(p => p.Vasarlasoks)
                    .HasForeignKey(d => d.VasarloId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("VASARLASOK_VASARLOK_ID_FK");
            });

            modelBuilder.Entity<Vasarlok>(entity =>
            {
                entity.ToTable("Vasarlok");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Nev)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RegDate).HasColumnType("datetime");

                entity.HasOne(d => d.MegyeNavigation)
                    .WithMany(p => p.Vasarloks)
                    .HasForeignKey(d => d.Megye)
                    .HasConstraintName("VASARLOK_MEGYEK_ID_FK");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}